// <auto-generated />
using System;
using Data.AppContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.AppContext.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240407061038_ExtendRecipeTable")]
    partial class ExtendRecipeTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Data.Models.Entities.CookBook.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryType")
                        .HasColumnType("int");

                    b.Property<bool>("IsRecipeCategory")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryType = 1,
                            IsRecipeCategory = true,
                            Name = "Dessert"
                        },
                        new
                        {
                            Id = 2,
                            CategoryType = 1,
                            IsRecipeCategory = true,
                            Name = "Huhn"
                        },
                        new
                        {
                            Id = 3,
                            CategoryType = 1,
                            IsRecipeCategory = true,
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = 4,
                            CategoryType = 1,
                            IsRecipeCategory = true,
                            Name = "Rind"
                        },
                        new
                        {
                            Id = 5,
                            CategoryType = 1,
                            IsRecipeCategory = true,
                            Name = "Schwein"
                        },
                        new
                        {
                            Id = 6,
                            CategoryType = 1,
                            IsRecipeCategory = true,
                            Name = "Vegetarisch"
                        });
                });

            modelBuilder.Entity("Data.Models.Entities.CookBook.IngredientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FkCategoryId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Data.Models.Entities.CookBook.RecipeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FKCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FKCategoryId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Data.Models.Entities.CookBook.RecipeIngredientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UnitId");

                    b.ToTable("RecipeIngredientEntity");
                });

            modelBuilder.Entity("Data.Models.Entities.CookBook.UnitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("IngredientUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kg"
                        },
                        new
                        {
                            Id = 2,
                            Name = "g"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Liter"
                        });
                });

            modelBuilder.Entity("Data.Models.Entities.Logging.LogMessageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ExceptionMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Stacktrace")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Trigger")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LogMessages");
                });

            modelBuilder.Entity("Data.Models.Entities.CookBook.IngredientEntity", b =>
                {
                    b.HasOne("Data.Models.Entities.CookBook.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("FkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Data.Models.Entities.CookBook.RecipeEntity", b =>
                {
                    b.HasOne("Data.Models.Entities.CookBook.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("FKCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Data.Models.Entities.CookBook.RecipeIngredientEntity", b =>
                {
                    b.HasOne("Data.Models.Entities.CookBook.IngredientEntity", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Entities.CookBook.RecipeEntity", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Entities.CookBook.UnitEntity", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Data.Models.Entities.CookBook.IngredientEntity", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Data.Models.Entities.CookBook.RecipeEntity", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
